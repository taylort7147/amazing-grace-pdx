@model MessageManager.Pages.Shared._MessageTableRowModel;
@using MessageManager.Utility;
@using System.Web;
@using MessageManager.Pages.Messages;

@{
    var tooltipShowDelay = 750;
    var tooltipHideDelay = 0;
    var searchStringRaw = ViewData["CurrentSearch"] as string;
    var searchCriteria = MessageSearch.GetCriteria(searchStringRaw);
    var searchString = searchCriteria.SearchString;

    static string TransformBold(string s)
    {
        return "<b>" + s + "</b>";
    }
    static string TransformHighlight(string s)
    {
        return "<mark>" + s + "</mark>";
    }
}

<tr>
    <td>
        @Html.DisplayFor(model => model.Message.Date)
    </td>
    <td>
        @{
            var messageName = HttpUtility.HtmlEncode(Model.Message.Title);
            var messageDescription = HttpUtility.HtmlEncode(Model.Message.Description);
            if (!string.IsNullOrWhiteSpace(searchString))
            {
                messageName = messageName.ReplaceTransform(searchString, TransformBold,
                StringComparison.OrdinalIgnoreCase);
                messageDescription = messageDescription.ReplaceTransform(searchString, TransformBold,
                StringComparison.OrdinalIgnoreCase);
            }

            <span data-toggle="tooltip" data-placement="top" data-html="true"
                data-delay='{"show": @tooltipShowDelay, "hide" : @tooltipHideDelay}'
                title="@Html.Raw(messageDescription)">@Html.Raw(messageName)</span>
        }

    </td>
    <td style="white-space: nowrap">
        @{
            var bibleReferences = @Model.Message.BibleReferences;
            if (bibleReferences != null)
            {
                <ul>
                    @foreach (var bibleReferenceRange in @bibleReferences)
                    {
                        var text = @bibleReferenceRange.ToFriendlyString();
                        if (Model.MatchingBibleReferences != null)
                        {
                            foreach (var matchingReference in Model.MatchingBibleReferences)
                            {
                                text = text.ReplaceTransform(matchingReference, TransformBold);
                            }
                        }

                        <li>
                            @Html.Raw(text)
                        </li>
                    }
                </ul>
            }
        }
    </td>
    <td>
        @if (Model.Message.SeriesId != null)
        {
            var seriesName = HttpUtility.HtmlEncode(Model.Message.Series.Name);
            var seriesDescription = HttpUtility.HtmlEncode(Model.Message.Series.Description);
            if (!string.IsNullOrWhiteSpace(searchString))
            {
                seriesName = seriesName.ReplaceTransform(searchString, TransformBold);
                seriesDescription = seriesDescription.ReplaceTransform(searchString, TransformBold,
                StringComparison.OrdinalIgnoreCase);
            }

            <a class="btn btn-light" asp-page="/Series/Details" asp-route-id="@Model.Message.SeriesId" role="button"
            data-toggle="tooltip" data-placement="top" data-html="true"
            data-delay='{"show": @tooltipShowDelay, "hide" : @tooltipHideDelay}'
            title="@Html.Raw(seriesDescription)">@Html.Raw(seriesName)</a>
        }
    </td>
    <td>
        @if (Model.Message.VideoId != null)
        {
            <a class="btn btn-light" asp-page="/Videos/Details" asp-route-id="@Model.Message.VideoId"
            role="button">Video</a>
        }
    </td>
    <td>
        @if (Model.Message.AudioId != null)
        {
            <a class="btn btn-light" asp-page="/Audio/Details" asp-route-id="@Model.Message.AudioId" role="button">Audio</a>
        }
    </td>
    <td>
        @if (Model.Message.NotesId != null)
        {
            <a class="btn btn-light" asp-page="/Notes/Details" asp-route-id="@Model.Message.NotesId" role="button">Notes</a>
        }
    </td>
    <td>
        <partial name="_EditLink" model="new { Id = @Model.Message.Id, User = @User }">
            <a asp-page="./Details" asp-route-id="@Model.Message.Id">Details</a>
            <partial name="_DeleteLink" model="new { Id = @Model.Message.Id, User = @User }">
    </td>
</tr>