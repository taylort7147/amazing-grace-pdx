@page
@model MessageManager.Pages.Messages.IndexModel
@using MessageManager.Pages.Shared;

@{
    ViewData["Title"] = "Index";
}

<div class="text-center">
    <a class="btn btn-primary btn-large" asp-page="/Messages/Create" role="button">Add a New Message</a>
</div>
<div>
    <!-- TODO: Move to partial -->
    <form asp-action="" method="get">
        <div class="active-cyan-4 mb-4">
            <input id="search" autofocus class="form-control" type="text" name="SearchString" data-toggle="tooltip"
                data-html="true" data-placement="bottom" placeholder="Search" aria-label="Search" data-container="body"
                data-delay='{"show":2000, "hide":0}'
                title="Try using filters:<br><b>m:</b> message title/description<br><b>s:</b> series name/description<br><b>b:</b> Bible reference (range allowed)"
                value="@ViewData["CurrentSearch"]">
            @if (ViewData["SearchErrorMessage"] != null)
            {
                <span class="text-danger field-validation-error">@ViewData["SearchErrorMessage"]</span>
            }
        </div>
    </form>
</div>
<div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-page="Index" asp-route-sortOrder="@ViewData["DateSortParam"]"
                        asp-route-searchString="@ViewData["CurrentSearch"]">
                        @Html.DisplayNameFor(model => model.Messages[0].Date)</a>
                </th>
                <th>
                    <a asp-page="Index" asp-route-sortOrder="@ViewData["TitleSortParam"]"
                        asp-route-searchString="@ViewData["CurrentSearch"]">
                        @Html.DisplayNameFor(model => model.Messages[0].Title)</a>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Messages[0].BibleReferences)</a>
                </th>
                <th>
                    <a asp-page="Index" asp-route-sortOrder="@ViewData["SeriesSortParam"]"
                        asp-route-searchString="@ViewData["CurrentSearch"]">
                        @Html.DisplayNameFor(model => model.Messages[0].Series)</a>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Messages[0].Video)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Messages[0].Audio)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Messages[0].Notes)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var message in Model.Messages)
            {
                @await Html.PartialAsync("_MessageTableRow", new _MessageTableRowModel{Message = message,
            MatchingBibleReferences = Model.MatchingBibleReferences})
            }
        </tbody>
    </table>
    @if (!String.IsNullOrEmpty((string)ViewData["CurrentSearch"]))
    {
        <a asp-action="Index">Back to List</a>
    }
</div>

@section Scripts
{
<script>
    // Select contents of search box when page is ready
    $(document).ready(function (evt) {
        $("#search").select();
    });
</script>
}
